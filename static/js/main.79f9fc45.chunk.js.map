{"version":3,"sources":["assets/flags/united-nations.svg","assets/flags/uk.svg","assets/flags/france.svg","assets/flags/germany.svg","assets/flags/italy.svg","assets/flags/belarus.svg","assets/flags/ukraine.svg","assets/flags/russia.svg","state/reducer.js","state/actions.js","state/store.js","state/api.js","state/thunks.js","state/actionCreators.js","components/SidebarButton/SidebarButton.jsx","components/Sidebar/Sidebar.jsx","components/ListItemValue/ListItemValue.jsx","components/Header/Header.jsx","components/FilterToggle/FilterToggle.jsx","components/CountryFilter/CountryFilter.jsx","state/selectors.js","components/CountryFilter/CountryFilterContainer.jsx","components/CountryListItem/CountryListItem.jsx","components/CountryList/CountryList.jsx","tools/numberConverter.js","tools/dateConverter.js","components/CountryList/CountryListContainer.jsx","components/CountryChart/CountryChart.jsx","components/CountryChart/CountryChartContainer.jsx","components/CountryPage/CountryPage.jsx","components/WorldFilter/WorldFilter.jsx","components/WorldFilter/WorldFilterContainer.jsx","components/WorldListItem/WorldListItem.jsx","components/WorldList/WorldList.jsx","components/WorldList/WorldListContainer.jsx","components/WorldPage/WorldPage.jsx","components/Main/Main.jsx","components/Loader/Loader.jsx","App.js","index.js"],"names":["module","exports","initialState","world","worldList","filterType","original","filtered","countryList","displayType","isSidebarOpen","isInit","appReducer","state","action","type","summary","Global","Countries","countryObj","sort","a","b","TotalConfirmed","TotalRecovered","TotalDeaths","reverse","store","createStore","applyMiddleware","thunk","window","instance","Axios","create","baseURL","API","getSummary","get","then","response","data","error","getCountry","country","onSetCountry","dispatch","setCountry","SidebarButton","icon","className","src","alt","Sidebar","setSidebarClose","onClick","exact","to","activeClassName","uk","france","germany","italy","belarus","ukraine","russia","ListItemValue","img","text","totalData","newData","numberConverter","dateConverter","isColumn","Header","setSidebarOpen","NewConfirmed","NewRecovered","NewDeaths","withRouter","match","setListType","setChartType","params","CountryFilter","setDefaultFilter","setReverseFilter","disabled","getInitStatus","getWorld","getWorldFilterType","getWorldListFiltered","getCountryDisplayType","getCountryFilterType","getCountryListOriginal","getCountryListFiltered","getSidebarStatus","connect","setCountryFilterDefault","setCountryFilterReverse","setDisplayTypeList","setDisplayTypeChart","CountryListItem","Day","Confirmed","Recovered","Deaths","CountryList","map","item","key","Date","value","Math","round","string","date","parse","Intl","DateTimeFormat","format","props","CountryChart","useEffect","Chart","chartRef","current","labels","datasets","label","borderColor","borderWidth","fill","options","responsive","elements","point","pointStyle","radius","legend","position","padding","scales","yAxes","ticks","beginAtZero","useRef","ref","path","render","WorldFilter","activeButton","setConfirmedFilter","setRecoveredFilter","setDeathFilter","placeholder","setWorldFilterDefault","setWorldFilterConfirmed","setWorldFilterRecovered","setWorldFilterDeath","WorldListItem","Country","WorldList","Slug","WorldPage","WorldFilterContainer","Main","worldIcon","Loader","onInitialization","initialization","ReactDOM","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.79f9fc45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/united-nations.f1d483fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/uk.8b60db82.svg\";","module.exports = __webpack_public_path__ + \"static/media/france.a573a70c.svg\";","module.exports = __webpack_public_path__ + \"static/media/germany.42efef16.svg\";","module.exports = __webpack_public_path__ + \"static/media/italy.d21dc3b6.svg\";","module.exports = __webpack_public_path__ + \"static/media/belarus.5057516e.svg\";","module.exports = __webpack_public_path__ + \"static/media/ukraine.24ffc5a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/russia.e0012980.svg\";","import {\r\n    INITIALIZATION, SET_COUNTRY,\r\n    WORLD_FILTER_DEFAULT, WORLD_FILTER_CONFIRMED, WORLD_FILTER_RECOVERED, WORLD_FILTER_DEATH,\r\n    COUNTRY_FILTER_DEFAULT, COUNTRY_FILTER_REVERSE,\r\n    SET_DISPLAY_TYPE_LIST, SET_DISPLAY_TYPE_CHART,\r\n    SET_SIDEBAR_OPEN, SET_SIDEBAR_CLOSE\r\n} from \"./actions\"\r\n\r\nconst initialState = {\r\n    world: null,\r\n    worldList: {\r\n        filterType: null,\r\n        original: null,\r\n        filtered: null\r\n    },\r\n    countryList: {\r\n        displayType: null,\r\n        filterType: null,\r\n        original: null,\r\n        filtered: null\r\n    },\r\n    isSidebarOpen: false,\r\n    isInit: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZATION:\r\n            return {\r\n                ...state,\r\n                world: { ...action.summary.Global },\r\n                worldList: {\r\n                    filterType: 'default',\r\n                    original: [...action.summary.Countries],\r\n                    filtered: [...action.summary.Countries]\r\n                },\r\n                isInit: true\r\n            }\r\n\r\n        case SET_COUNTRY:\r\n            return {\r\n                ...state,\r\n                countryList: {\r\n                    displayType: 'list',\r\n                    filterType: 'default',\r\n                    original: [...action.countryObj],\r\n                    filtered: [...action.countryObj]\r\n                }\r\n            }\r\n\r\n        case WORLD_FILTER_DEFAULT:\r\n            return {\r\n                ...state,\r\n                worldList: {\r\n                    ...state.worldList,\r\n                    filterType: 'default',\r\n                    filtered: [...state.worldList.original]\r\n                }\r\n            }\r\n\r\n        case WORLD_FILTER_CONFIRMED:\r\n            return {\r\n                ...state,\r\n                worldList: {\r\n                    ...state.worldList,\r\n                    filterType: 'confirmed',\r\n                    filtered: [...state.worldList.filtered.sort((a, b) => b.TotalConfirmed - a.TotalConfirmed)]\r\n                }\r\n            }\r\n\r\n        case WORLD_FILTER_RECOVERED:\r\n            return {\r\n                ...state,\r\n                worldList: {\r\n                    ...state.worldList,\r\n                    filterType: 'recovered',\r\n                    filtered: [...state.worldList.filtered.sort((a, b) => b.TotalRecovered - a.TotalRecovered)]\r\n                }\r\n            }\r\n\r\n        case WORLD_FILTER_DEATH:\r\n            return {\r\n                ...state,\r\n                worldList: {\r\n                    ...state.worldList,\r\n                    filterType: 'death',\r\n                    filtered: [...state.worldList.filtered.sort((a, b) => b.TotalDeaths - a.TotalDeaths)]\r\n                }\r\n            }\r\n\r\n        case COUNTRY_FILTER_DEFAULT:\r\n            return {\r\n                ...state,\r\n                countryList: {\r\n                    ...state.countryList,\r\n                    filterType: 'default',\r\n                    filtered: [...state.countryList.original]\r\n                }\r\n            }\r\n\r\n        case COUNTRY_FILTER_REVERSE:\r\n            return {\r\n                ...state,\r\n                countryList: {\r\n                    ...state.countryList,\r\n                    filterType: 'reverse',\r\n                    filtered: [...state.countryList.filtered.reverse()]\r\n                }\r\n            }\r\n\r\n        case SET_DISPLAY_TYPE_LIST:\r\n            return {\r\n                ...state,\r\n                countryList: {\r\n                    ...state.countryList,\r\n                    displayType: 'list'\r\n                }\r\n            }\r\n\r\n        case SET_DISPLAY_TYPE_CHART:\r\n            return {\r\n                ...state,\r\n                countryList: {\r\n                    ...state.countryList,\r\n                    displayType: 'chart'\r\n                }\r\n            }\r\n\r\n        case SET_SIDEBAR_OPEN:\r\n            return {\r\n                ...state,\r\n                isSidebarOpen: true\r\n            }\r\n\r\n        case SET_SIDEBAR_CLOSE:\r\n            return {\r\n                ...state,\r\n                isSidebarOpen: false\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default appReducer","export const INITIALIZATION = 'INITIALIZATION'\r\nexport const SET_COUNTRY = 'SET_COUNTRY'\r\nexport const WORLD_FILTER_DEFAULT = 'WORLD_FILTER_DEFAULT'\r\nexport const WORLD_FILTER_CONFIRMED = 'WORLD_FILTER_CONFIRMED'\r\nexport const WORLD_FILTER_RECOVERED = 'WORLD_FILTER_RECOVERED'\r\nexport const WORLD_FILTER_DEATH = 'WORLD_FILTER_DEATH'\r\nexport const COUNTRY_FILTER_DEFAULT = 'COUNTRY_FILTER_DEFAULT'\r\nexport const COUNTRY_FILTER_REVERSE = 'COUNTRY_FILTER_REVERSE'\r\nexport const SET_DISPLAY_TYPE_LIST = 'SET_DISPLAY_TYPE_LIST'\r\nexport const SET_DISPLAY_TYPE_CHART = 'SET_DISPLAY_TYPE_CHART'\r\nexport const SET_SIDEBAR_OPEN = 'SET_SIDEBAR_OPEN'\r\nexport const SET_SIDEBAR_CLOSE = 'SET_SIDEBAR_CLOSE'","import { createStore, applyMiddleware } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport appReducer from \"./reducer\"\r\n\r\nlet store = createStore(appReducer, applyMiddleware(thunk))\r\nwindow.store = store\r\n\r\nexport default store","import Axios from \"axios\"\r\n\r\nconst instance = Axios.create({ baseURL: 'https://api.covid19api.com/' })\r\n\r\nconst API = {\r\n    getSummary() {\r\n        return instance.get('summary').then(response => response.data, error => API.getSummary())\r\n    },\r\n    getCountry(country) {\r\n        return instance.get(`total/dayone/country/${country}`).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport default API","import API from \"./api\";\r\nimport { initialization, setCountry } from \"./actionCreators\";\r\n\r\nexport const onInitialization = () => (dispatch) => {\r\n    API.getSummary().then(summary => dispatch(initialization(summary)))\r\n}\r\n\r\nexport const onSetCountry = (country) => (dispatch) => {\r\n    API.getCountry(country).then(countryObj => dispatch(setCountry(countryObj)))\r\n}","import {\r\n    INITIALIZATION, SET_COUNTRY,\r\n    WORLD_FILTER_DEFAULT, WORLD_FILTER_CONFIRMED, WORLD_FILTER_RECOVERED, WORLD_FILTER_DEATH,\r\n    COUNTRY_FILTER_DEFAULT, COUNTRY_FILTER_REVERSE,\r\n    SET_DISPLAY_TYPE_LIST, SET_DISPLAY_TYPE_CHART,\r\n    SET_SIDEBAR_OPEN, SET_SIDEBAR_CLOSE\r\n} from \"./actions\"\r\n\r\nexport const initialization = (summary) => ({ type: INITIALIZATION, summary })\r\nexport const setCountry = (countryObj) => ({ type: SET_COUNTRY, countryObj })\r\nexport const setWorldFilterDefault = () => ({ type: WORLD_FILTER_DEFAULT })\r\nexport const setWorldFilterConfirmed = () => ({ type: WORLD_FILTER_CONFIRMED })\r\nexport const setWorldFilterRecovered = () => ({ type: WORLD_FILTER_RECOVERED })\r\nexport const setWorldFilterDeath = () => ({ type: WORLD_FILTER_DEATH })\r\nexport const setCountryFilterDefault = () => ({ type: COUNTRY_FILTER_DEFAULT })\r\nexport const setCountryFilterReverse = () => ({ type: COUNTRY_FILTER_REVERSE })\r\nexport const setDisplayTypeList = () => ({ type: SET_DISPLAY_TYPE_LIST })\r\nexport const setDisplayTypeChart = () => ({ type: SET_DISPLAY_TYPE_CHART })\r\nexport const setSidebarOpen = () => ({ type: SET_SIDEBAR_OPEN })\r\nexport const setSidebarClose = () => ({ type: SET_SIDEBAR_CLOSE })","import React from 'react'\r\nimport './SidebarButton.scss'\r\n\r\nconst SidebarButton = ({ icon, country }) => {\r\n    return (\r\n        <div className='sidebar__button'>\r\n            <span><img src={icon} alt='flag' /></span>\r\n            <span>{country}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarButton","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport SidebarButton from '../SidebarButton/SidebarButton'\r\nimport world from '../../assets/flags/united-nations.svg'\r\nimport uk from '../../assets/flags/uk.svg'\r\nimport france from '../../assets/flags/france.svg'\r\nimport germany from '../../assets/flags/germany.svg'\r\nimport italy from '../../assets/flags/italy.svg'\r\nimport belarus from '../../assets/flags/belarus.svg'\r\nimport ukraine from '../../assets/flags/ukraine.svg'\r\nimport russia from '../../assets/flags/russia.svg'\r\nimport './Sidebar.scss'\r\n\r\nconst Sidebar = ({ isSidebarOpen, setSidebarClose }) => {\r\n    return (\r\n        <aside className={`covid-app__section covid-app__sidebar ${isSidebarOpen ? 'covid-app__sidebar_mobile' : ''}`}>\r\n            <button className='covid-app__button covid-app__button_selected covid-app__button_close-btn' onClick={setSidebarClose}>Back</button>\r\n            <NavLink exact to='/' activeClassName=\"selected\" onClick={setSidebarClose}><SidebarButton icon={world} country='World' /></NavLink>\r\n            <NavLink to='/united-kingdom' activeClassName=\"selected\" onClick={setSidebarClose}><SidebarButton icon={uk} country='United Kingdom' /></NavLink>\r\n            <NavLink to='/france' activeClassName=\"selected\" onClick={setSidebarClose}><SidebarButton icon={france} country='France' /></NavLink>\r\n            <NavLink to='/germany' activeClassName=\"selected\" onClick={setSidebarClose}><SidebarButton icon={germany} country='Germany' /></NavLink>\r\n            <NavLink to='/italy' activeClassName=\"selected\" onClick={setSidebarClose}><SidebarButton icon={italy} country='Italy' /></NavLink>\r\n            <NavLink to='/belarus' activeClassName=\"selected\" onClick={setSidebarClose}><SidebarButton icon={belarus} country='Belarus' /></NavLink>\r\n            <NavLink to='/ukraine' activeClassName=\"selected\" onClick={setSidebarClose}><SidebarButton icon={ukraine} country='Ukraine' /></NavLink>\r\n            <NavLink to='/russia' activeClassName=\"selected\" onClick={setSidebarClose}><SidebarButton icon={russia} country='Russia' /></NavLink>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React from 'react'\r\nimport './ListItemValue.scss'\r\n\r\nconst ListItemValue = ({ img, alt, text, totalData, newData, numberConverter, dateConverter, isColumn }) => {\r\n    return (\r\n        <span className={`list-item__value ${isColumn ? 'list-item__value_column' : ''}`}>\r\n            {img && <span className='list-item__value_text'><img src={img} alt={alt} /> </span>}\r\n            {text && <span className='list-item__value_text'>{text} </span>}\r\n            {dateConverter && <span className='list-item__value_text'>{dateConverter(totalData)}</span>}\r\n            {numberConverter && !newData && <span className='list-item__value_data'>{numberConverter(totalData)}</span>}\r\n            {numberConverter && !!newData && <span className='list-item__value_data'>{numberConverter(totalData)} (+{numberConverter(newData)})</span>}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default ListItemValue","import React from 'react'\r\nimport ListItemValue from '../ListItemValue/ListItemValue'\r\nimport './Header.scss'\r\n\r\nconst Header = ({ icon, world, setSidebarOpen, numberConverter }) => {\r\n    return (\r\n        <header className='covid-app__section covid-app__header'>\r\n            <button className='covid-app__button covid-app__button_selected' onClick={setSidebarOpen}>\r\n                Menu\r\n            </button>\r\n            <ListItemValue img={icon} alt='flag' />\r\n            <ListItemValue text={'Confirmed:'} totalData={world.TotalConfirmed} newData={world.NewConfirmed} numberConverter={numberConverter} isColumn />\r\n            <ListItemValue text={'Recovered:'} totalData={world.TotalRecovered} newData={world.NewRecovered} numberConverter={numberConverter} isColumn />\r\n            <ListItemValue text={'Deaths:'} totalData={world.TotalDeaths} newData={world.NewDeaths} numberConverter={numberConverter} isColumn />\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\nimport './FilterToggle.scss'\r\n\r\nconst FilterToggle = ({ match, displayType, setListType, setChartType }) => {\r\n    return (\r\n        <span className='filter__toggle'>\r\n            <NavLink to={`/${match.params.country}`}>\r\n                <button\r\n                    className={`covid-app__button ${displayType === 'list' ? 'covid-app__button_selected' : null}`}\r\n                    onClick={setListType}\r\n                >\r\n                    List\r\n                </button>\r\n            </NavLink>\r\n            <NavLink to={`/${match.params.country}/chart`}>\r\n                <button\r\n                    className={`covid-app__button ${displayType === 'chart' ? 'covid-app__button_selected' : null}`}\r\n                    onClick={setChartType}\r\n                >\r\n                    Chart\r\n                </button>\r\n            </NavLink>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default withRouter(FilterToggle)","import React from 'react'\r\nimport FilterToggle from '../FilterToggle/FilterToggle'\r\n\r\nconst CountryFilter = ({ displayType, filterType, setDefaultFilter, setReverseFilter, setListType, setChartType }) => {\r\n    return (\r\n        <section className='covid-app__section covid-app__filter'>\r\n            <span>\r\n                <span>Sorted by:</span>\r\n                <button\r\n                    className={`covid-app__button ${filterType === 'default' ? 'covid-app__button_selected' : null}`}\r\n                    disabled={displayType === 'chart'}\r\n                    onClick={setDefaultFilter}\r\n                >Default</button>\r\n                <button\r\n                    className={`covid-app__button ${filterType === 'reverse' ? 'covid-app__button_selected' : null}`}\r\n                    disabled={displayType === 'chart'}\r\n                    onClick={setReverseFilter}\r\n                >Reverse</button>\r\n            </span>\r\n            <FilterToggle displayType={displayType} setListType={setListType} setChartType={setChartType} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CountryFilter","export const getInitStatus = (state) => {\r\n    return state.isInit\r\n}\r\n\r\nexport const getWorld = (state) => {\r\n    return state.world\r\n}\r\n\r\nexport const getWorldFilterType = (state) => {\r\n    return state.worldList.filterType\r\n}\r\n\r\nexport const getWorldListOriginal = (state) => {\r\n    return state.worldList.original\r\n}\r\n\r\nexport const getWorldListFiltered = (state) => {\r\n    return state.worldList.filtered\r\n}\r\n\r\nexport const getCountryDisplayType = (state) => {\r\n    return state.countryList.displayType\r\n}\r\n\r\nexport const getCountryFilterType = (state) => {\r\n    return state.countryList.filterType\r\n}\r\n\r\nexport const getCountryListOriginal = (state) => {\r\n    return state.countryList.original\r\n}\r\n\r\nexport const getCountryListFiltered = (state) => {\r\n    return state.countryList.filtered\r\n}\r\n\r\nexport const getSidebarStatus = (state) => {\r\n    return state.isSidebarOpen\r\n}","import React from 'react'\r\nimport CountryFilter from './CountryFilter'\r\nimport { connect } from 'react-redux'\r\nimport { setCountryFilterDefault, setCountryFilterReverse, setDisplayTypeList, setDisplayTypeChart } from '../../state/actionCreators'\r\nimport { getCountryFilterType, getCountryDisplayType } from '../../state/selectors'\r\n\r\nconst CountryFilterContainer = ({ displayType, filterType, setCountryFilterDefault, setCountryFilterReverse, setDisplayTypeList, setDisplayTypeChart }) => {\r\n    return (\r\n        <CountryFilter\r\n            displayType={displayType}\r\n            filterType={filterType}\r\n            setDefaultFilter={setCountryFilterDefault}\r\n            setReverseFilter={setCountryFilterReverse}\r\n            setListType={setDisplayTypeList}\r\n            setChartType={setDisplayTypeChart}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    displayType: getCountryDisplayType(state),\r\n    filterType: getCountryFilterType(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    setCountryFilterDefault,\r\n    setCountryFilterReverse,\r\n    setDisplayTypeList,\r\n    setDisplayTypeChart\r\n})(CountryFilterContainer)","import React from 'react'\r\nimport ListItemValue from '../ListItemValue/ListItemValue'\r\n\r\nconst CountryListItem = ({ Day, Confirmed, Recovered, Deaths, numberConverter, dateConverter }) => {\r\n    return (\r\n        <section className='covid-app__list-item'>\r\n            <ListItemValue totalData={Day} dateConverter={dateConverter} />\r\n            <ListItemValue text={'Confirmed:'} totalData={Confirmed} numberConverter={numberConverter} />\r\n            <ListItemValue text={'Recovered:'} totalData={Recovered} numberConverter={numberConverter} />\r\n            <ListItemValue text={'Deaths:'} totalData={Deaths} numberConverter={numberConverter} />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CountryListItem","import React from 'react'\r\nimport CountryListItem from '../CountryListItem/CountryListItem'\r\n\r\nconst CountryList = ({ countryList, numberConverter, dateConverter }) => {\r\n\r\n    return (\r\n        <section className='covid-app__section covid-app__section_list'>\r\n            {\r\n                countryList ? (countryList.map(item => (\r\n                    <CountryListItem\r\n                        key={item.Date}\r\n                        Day={item.Date}\r\n                        Confirmed={item.Confirmed}\r\n                        Recovered={item.Recovered}\r\n                        Deaths={item.Deaths}\r\n                        numberConverter={numberConverter}\r\n                        dateConverter={dateConverter}\r\n                    />)\r\n                )) : 'Loading...'\r\n            }\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default CountryList ","export const numberConverter = (value) => {\r\n    if (value > 1000000) {\r\n        return `${(Math.round(value / 1000)) / 1000}M`\r\n    }\r\n    else if (value > 10000) {\r\n        return `${(Math.round(value / 100)) / 10}K`\r\n    }\r\n    else if (value > 1000) {\r\n        return `${(Math.round(value / 10)) / 100}K`\r\n    }\r\n    else if (value < 1000) {\r\n        return value\r\n    }\r\n}","export const dateConverter = (string) => {\r\n    const date = new Date(Date.parse(string))\r\n    const formatter = new Intl.DateTimeFormat()\r\n    return formatter.format(date)\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport CountryList from './CountryList'\r\nimport { getCountryListFiltered } from '../../state/selectors'\r\nimport { numberConverter } from '../../tools/numberConverter'\r\nimport { dateConverter } from '../../tools/dateConverter'\r\n\r\nconst CountryListContainer = (props) => {\r\n    return (\r\n        <CountryList {...props} numberConverter={numberConverter} dateConverter={dateConverter} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countryList: getCountryListFiltered(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(CountryListContainer)","import React, { useEffect, useRef } from 'react'\r\nimport Chart from 'chart.js'\r\nimport './CountryChart.scss'\r\n\r\nconst CountryChart = ({ countryList, dateConverter }) => {\r\n\r\n    useEffect(() => {\r\n        new Chart(chartRef.current, {\r\n            type: 'line',\r\n            data: {\r\n                labels: countryList.map(item => dateConverter(item.Date)),\r\n                datasets: [{\r\n                    label: 'Confirmed',\r\n                    data: countryList.map(item => item.Confirmed),\r\n                    borderColor: '#4D1ED3',\r\n                    borderWidth: 3,\r\n                    fill: false\r\n                }, {\r\n                    label: 'Recovered',\r\n                    data: countryList.map(item => item.Recovered),\r\n                    borderColor: '#72EBBA',\r\n                    borderWidth: 3,\r\n                    fill: false\r\n                }, {\r\n                    label: 'Deaths',\r\n                    data: countryList.map(item => item.Deaths),\r\n                    borderColor: '#FC1946',\r\n                    borderWidth: 3,\r\n                    fill: false\r\n                }]\r\n            },\r\n            options: {\r\n                responsive: true,\r\n                elements: {\r\n                    point: {\r\n                        pointStyle: 'circle',\r\n                        radius: 0\r\n                    }\r\n                },\r\n                legend: {\r\n                    position: \"bottom\",\r\n                    labels: {\r\n                        padding: 40,\r\n                    }\r\n                },\r\n                scales: {\r\n                    yAxes: [{\r\n                        ticks: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }]\r\n                }\r\n            }\r\n        })\r\n    }, [countryList, dateConverter])\r\n\r\n    const chartRef = useRef(null)\r\n\r\n    return (\r\n        <section className='covid-app__section covid-app__chart'>\r\n            <canvas ref={chartRef}></canvas>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default CountryChart","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getCountryListOriginal } from '../../state/selectors'\r\nimport { numberConverter } from '../../tools/numberConverter'\r\nimport { dateConverter } from '../../tools/dateConverter'\r\nimport CountryChart from './CountryChart'\r\n\r\nconst CountryChartContainer = (props) => {\r\n    return (\r\n        <CountryChart {...props} numberConverter={numberConverter} dateConverter={dateConverter} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    countryList: getCountryListOriginal(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(CountryChartContainer)","import React, { useEffect } from 'react'\r\nimport { Route, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport CountryFilterContainer from '../CountryFilter/CountryFilterContainer'\r\nimport CountryListContainer from '../CountryList/CountryListContainer'\r\nimport CountryChartContainer from '../CountryChart/CountryChartContainer'\r\nimport { onSetCountry } from '../../state/thunks'\r\n\r\nconst CountryPage = ({ match, onSetCountry }) => {\r\n\r\n    useEffect(() => {\r\n        onSetCountry(match.params.country)\r\n    }, [match.params.country, onSetCountry])\r\n\r\n    return (\r\n        <>\r\n            <CountryFilterContainer />\r\n            <Route exact path='/:country/' render={() => <CountryListContainer />} />\r\n            <Route path='/:country/chart' render={() => <CountryChartContainer />} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(connect(null, { onSetCountry })(CountryPage))","import React from 'react'\r\n\r\nconst WorldFilter = ({ activeButton, setDefaultFilter, setConfirmedFilter, setRecoveredFilter, setDeathFilter }) => {\r\n    return (\r\n        <section className='covid-app__section covid-app__filter'>\r\n            <span>\r\n                <span>Sorted by:</span>\r\n                <button\r\n                    className={`covid-app__button ${activeButton === 'default' ? 'covid-app__button_selected' : null}`}\r\n                    onClick={setDefaultFilter}>Default</button>\r\n                <button\r\n                    className={`covid-app__button ${activeButton === 'confirmed' ? 'covid-app__button_selected' : null}`}\r\n                    onClick={setConfirmedFilter}>Confirmed</button>\r\n                <button\r\n                    className={`covid-app__button ${activeButton === 'recovered' ? 'covid-app__button_selected' : null}`}\r\n                    onClick={setRecoveredFilter}>Recovered</button>\r\n                <button\r\n                    className={`covid-app__button ${activeButton === 'death' ? 'covid-app__button_selected' : null}`}\r\n                    onClick={setDeathFilter}>Deaths</button>\r\n            </span>\r\n            <span>\r\n                <input placeholder='Search country...' />\r\n            </span>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default WorldFilter","import React from 'react'\r\nimport WorldFilter from './WorldFilter'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    setWorldFilterDefault, setWorldFilterConfirmed,\r\n    setWorldFilterRecovered, setWorldFilterDeath\r\n} from '../../state/actionCreators'\r\nimport { getWorldFilterType } from '../../state/selectors'\r\n\r\nconst CountryFilterContainer = ({ filterType, setWorldFilterDefault, setWorldFilterConfirmed, setWorldFilterRecovered, setWorldFilterDeath }) => {\r\n\r\n\r\n    return (\r\n        <WorldFilter\r\n            activeButton={filterType}\r\n            setDefaultFilter={setWorldFilterDefault}\r\n            setConfirmedFilter={setWorldFilterConfirmed}\r\n            setRecoveredFilter={setWorldFilterRecovered}\r\n            setDeathFilter={setWorldFilterDeath}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    filterType: getWorldFilterType(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    setWorldFilterDefault,\r\n    setWorldFilterConfirmed,\r\n    setWorldFilterRecovered,\r\n    setWorldFilterDeath\r\n})(CountryFilterContainer)","import React from 'react'\r\nimport ListItemValue from '../ListItemValue/ListItemValue'\r\n\r\nconst WorldListItem = ({ Country, TotalConfirmed, NewConfirmed, TotalDeaths, NewDeaths, TotalRecovered, NewRecovered, numberConverter }) => {\r\n    return (\r\n        <section className='covid-app__list-item'>\r\n            <ListItemValue text={Country} />\r\n            <ListItemValue text={'Confirmed:'} totalData={TotalConfirmed} newData={NewConfirmed} numberConverter={numberConverter} isColumn />\r\n            <ListItemValue text={'Recovered:'} totalData={TotalRecovered} newData={NewRecovered} numberConverter={numberConverter} isColumn />\r\n            <ListItemValue text={'Deaths:'} totalData={TotalDeaths} newData={NewDeaths} numberConverter={numberConverter} isColumn />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default WorldListItem","import React from 'react'\r\nimport WorldListItem from '../WorldListItem/WorldListItem'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst WorldList = ({ worldList, numberConverter }) => {\r\n    return (\r\n        <section className='covid-app__section covid-app__section_list'>\r\n            {\r\n                worldList.map(item => (\r\n                    <NavLink to={`/${item.Slug}`} key={item.Country}>\r\n                        <WorldListItem\r\n                            Country={item.Country}\r\n                            TotalConfirmed={item.TotalConfirmed}\r\n                            NewConfirmed={item.NewConfirmed}\r\n                            TotalDeaths={item.TotalDeaths}\r\n                            NewDeaths={item.NewDeaths}\r\n                            TotalRecovered={item.TotalRecovered}\r\n                            NewRecovered={item.NewRecovered}\r\n                            numberConverter={numberConverter}\r\n                        />\r\n                    </NavLink>)\r\n                )\r\n            }\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default WorldList","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport WorldList from './WorldList'\r\nimport { getWorldListFiltered } from '../../state/selectors'\r\nimport { numberConverter } from '../../tools/numberConverter'\r\n\r\nconst WorldListContainer = (props) => {\r\n    return (\r\n        <WorldList {...props} numberConverter={numberConverter} />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    worldList: getWorldListFiltered(state)\r\n})\r\n\r\nexport default connect(mapStateToProps, null)(WorldListContainer)","import React from 'react'\r\nimport WorldFilterContainer from '../WorldFilter/WorldFilterContainer'\r\nimport WorldListContainer from '../WorldList/WorldListContainer'\r\n\r\nconst WorldPage = () => {\r\n    return (\r\n        <>\r\n            <WorldFilterContainer />\r\n            <WorldListContainer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorldPage","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Header from '../Header/Header'\r\nimport CountryPage from '../CountryPage/CountryPage'\r\nimport WorldPage from '../WorldPage/WorldPage'\r\nimport worldIcon from '../../assets/flags/united-nations.svg'\r\nimport './Main.scss'\r\n\r\n\r\nconst Main = ({ world, numberConverter, setSidebarOpen }) => {\r\n    return (\r\n        <main className='covid-app__main'>\r\n            <Header\r\n                icon={worldIcon}\r\n                world={world}\r\n                setSidebarOpen={setSidebarOpen}\r\n                numberConverter={numberConverter}\r\n            />\r\n            <Route exact path='/' render={() => <WorldPage />} />\r\n            <Route path='/:country' render={() => <CountryPage />} />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport './Loader.scss'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"covid-app__loader\"><div></div><div></div><div></div><div></div></div>\r\n    )\r\n}\r\n\r\nexport default Loader","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { onInitialization, onSetCountry } from './state/thunks'\nimport Sidebar from './components/Sidebar/Sidebar'\nimport Main from './components/Main/Main'\nimport { getInitStatus, getWorld, getSidebarStatus } from './state/selectors'\nimport { numberConverter } from './tools/numberConverter'\nimport Loader from './components/Loader/Loader'\nimport { setSidebarOpen, setSidebarClose } from './state/actionCreators'\n\nfunction App({ isInit, onInitialization, isSidebarOpen, setSidebarOpen, setSidebarClose, ...props }) {\n\n  useEffect(() => {\n    onInitialization()\n  }, [onInitialization])\n\n  if (!isInit) return <Loader />\n\n  return (\n    <div className='covid-app'>\n      <Sidebar isSidebarOpen={isSidebarOpen} setSidebarClose={setSidebarClose} />\n      <Main {...props} numberConverter={numberConverter} setSidebarOpen={setSidebarOpen} />\n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  isInit: getInitStatus(state),\n  world: getWorld(state),\n  isSidebarOpen: getSidebarStatus(state)\n})\n\nexport default connect(mapStateToProps, { onInitialization, onSetCountry, setSidebarOpen, setSidebarClose })(App)","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from './state/store'\nimport App from './App'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <Router basename=\"/covid-app/\">\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}